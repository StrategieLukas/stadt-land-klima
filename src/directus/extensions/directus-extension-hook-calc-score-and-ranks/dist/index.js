"use strict";console.log("Extension loaded");var e=Object.freeze({__proto__:null,calculateScores:async function({municipalityIds:e=null,catalogVersionId:a},{services:t,getSchema:i,logger:r}){const s=await i(),o=new t.ItemsService("ratings_measures",{schema:s,accountability:{admin:!0}}),c=new t.ItemsService("measures",{schema:s,accountability:{admin:!0}}),n=new t.ItemsService("municipalities",{schema:s,accountability:{admin:!0}});try{const t=await c.readByQuery({limit:-1,filter:{catalog_version:{_eq:a},status:{_eq:"published"}},fields:["id","sector","weight"]});if(!t?.length)return void r.info(`[calculateScores] No published measures for catalog ${a}.`);const i=new Map(t.map(e=>[e.id,e])),s=await n.readByQuery({limit:-1,...e?.length?{filter:{id:{_in:e}}}:{},fields:["id","localteam_id","name"]});if(!s?.length)return void r.info("[calculateScores] No municipalities to process.");r.info(`[calculateScores] Processing ${s.length} municipalities for catalog ${a}.`);for(const e of s){const s=e.localteam_id;if(!s)continue;const c=await o.readByQuery({limit:-1,filter:{localteam_id:{_eq:s},applicable:{_eq:!0},approved:{_eq:!0},measure_published:{_eq:!0},measure_id:{catalog_version:{_eq:a},status:{_eq:"published"}}},fields:["rating","measure_id"]});if(!c?.length){r.info(`[calculateScores] No candidate ratings for municipality "${e.name}".`);continue}const l={numerator_rated_sum:0,denominator_rated:0,denominator_all:0},m={};for(const e of t)m[e.sector]||(m[e.sector]={numerator_rated:0,denominator_rated:0});let u=0;for(const e of c){const a="object"==typeof e.measure_id?e.measure_id.id:e.measure_id,t=i.get(a);if(!t)continue;const r=t.weight??0;if(r<=0)continue;const s=t.sector??"total";l.denominator_all+=r;const o=e.rating,c=null!=o?parseFloat(o):NaN;Number.isNaN(c)||(l.numerator_rated_sum+=c*r,l.denominator_rated+=r,u+=r,m[s]||(m[s]={numerator_rated:0,denominator_rated:0}),m[s].numerator_rated+=c*r,m[s].denominator_rated+=r)}const d={};d.percentage_rated=l.denominator_all>0?u/l.denominator_all*100:0,l.denominator_rated>0?d.score_total=l.numerator_rated_sum/l.denominator_rated*100:d.score_total=0;for(const[e,a]of Object.entries(m)){const t=a.denominator_rated>0?a.numerator_rated/a.denominator_rated*100:0;d[`score_${e}`]=t}r.info({municipality:e.name,totals:l,sectors:m,scoresToPush:d},`[calculateScores] Completed scoring for "${e.name}".`),await n.updateOne(e.id,d)}r.info(`[calculateScores] Completed calculations for catalog ${a}.`)}catch(e){throw r.error(e),e}}});module.exports=({action:a,filter:t},{services:i,database:r,getSchema:s,logger:o})=>{const c={admin:!0},n=async(a,t)=>{const{calculateScores:i}=await Promise.resolve().then(function(){return e});return await i(a,t)},l=async(e,a)=>{const t=await s(),r=new i.ItemsService("municipalities",{schema:t,accountability:c}),o=await r.readOne(e.key);o&&(await(async(e,{services:a,getSchema:t,logger:i})=>{const r=await t(),s=new a.ItemsService("measure_catalog",{schema:r,accountability:c}),o=new a.ItemsService("municipality_scores",{schema:r,accountability:c}),n=new a.ItemsService("municipalities",{schema:r,accountability:c}),l=(await s.readByQuery({limit:-1})).map(a=>({municipality:e.id,catalog_version:a.id,score_total:0,percentage_rated:0,score_agriculture:0,score_buildings:0,score_management:0,score_energy:0,score_industry:0,score_transport:0})),m=await o.createMany(l);await n.updateOne(e.id,{scores:m}),i.info(`[createEmptyScores] Created ${m.length} municipality_scores for ${e.name}`)})(o,a),await(async(e,{services:a,getSchema:t,logger:i})=>{const r=await t(),s=new a.ItemsService("measures",{schema:r,accountability:c}),o=new a.ItemsService("ratings_measures",{schema:r,accountability:c}),n=await s.readByQuery({limit:-1,filter:{status:{_eq:"published"}}});if(!n?.length)return void i.info(`[createEmptyRatings] No published measures found for new municipality ${e.name}`);const l=n.map(a=>({measure_id:a.id,catalog_version:"object"==typeof a.catalog_version?a.catalog_version.id:a.catalog_version,localteam_id:e.localteam_id,status:"draft",approved:!0,choices:a.choices_rating,rating:null}));await o.createMany(l,{emitEvents:!1}),i.info(`[createEmptyRatings] Created ${l.length} ratings_measures silently for municipality=${e.name}`)})(o,a))},m=async(e,a)=>{const t=await s(),r=new i.ItemsService("measures",{schema:t,accountability:c}),o=Array.isArray(e.keys)?e.keys[0]:e.keys,l=await r.readOne(o);if(!l||"published"!==l.status)return;await(async(e,{services:a,getSchema:t,logger:i})=>{const r=await t(),s=new a.ItemsService("municipalities",{schema:r,accountability:c}),o=new a.ItemsService("ratings_measures",{schema:r,accountability:c}),n=await s.readByQuery({limit:-1});if(!n?.length)return;const l=n.map(a=>({measure_id:e.id,catalog_version:"object"==typeof e.catalog_version?e.catalog_version.id:e.catalog_version,localteam_id:a.localteam_id,status:"draft",approved:!1,rating:null}));await o.createMany(l),i.info(`[createEmptyRatingsForMeasure] Created ${l.length} ratings for measure=${e.id}`)})(l,a);const m="object"==typeof l.catalog_version?l.catalog_version.id:l.catalog_version;await n({catalogVersionId:m},a)},u=async(e,a)=>{const t=await s(),r=new i.ItemsService("ratings_measures",{schema:t,accountability:c}),o=e.key??e.keys[0],l=await r.readOne(o,{fields:["localteam_id.municipality_id","measure_id.catalog_version"]}),m=l.localteam_id?.municipality_id,u="object"==typeof l.measure_id.catalog_version?l.measure_id.catalog_version.id:l.measure_id.catalog_version;m&&u&&(await n({municipalityIds:[m],catalogVersionId:u},a),await(async({catalogVersionId:e},{services:a,getSchema:t,logger:i})=>{const r=await t(),s=new a.ItemsService("municipality_scores",{schema:r,accountability:{admin:!0}}),o=await s.readByQuery({limit:-1,filter:{catalog_version:{_eq:e},municipality:{status:{_eq:"published"}}},fields:["id","score_total"]});if(!o?.length)return i.info(`[updateRanks] No published scores found for catalogVersion=${e}, thus not recalculating scores`);const c=o.sort((e,a)=>(a.score_total??0)-(e.score_total??0)).map((e,a,t)=>({id:e.id,rank:0===a||e.score_total!==t[a-1].score_total?a+1:t[a-1].rank}));for(const e of c)await s.updateOne(e.id,{rank:e.rank});i.info(`[updateRanks] Updated ranks for ${c.length} municipality_scores`)})({catalogVersionId:u},a))},d=(e,a)=>async(t,c)=>{try{o.info(`[HOOK] entering ${e} â€” collection=${t.collection} key=${t.key} keys=${t.keys}`),o.info(`[HOOK] ctx keys: ${Object.keys(c||{}).join(", ")}`),o.info(`[HOOK] services available: ${Object.keys(i||{}).slice(0,20).join(", ")}`),t&&t.collection||o.warn(`[HOOK:${e}] meta missing or malformed: ${JSON.stringify(t)}`),await a(t,{services:i,getSchema:s,database:r,logger:o})}catch(a){throw o.error(`[HOOK:${e}] Caught error: ${a?.message}`),o.error(a?.stack??a),a}};a("items.create",d("items.create",async(e,a)=>{switch(e.collection){case"municipalities":return await l(e,a);case"measures":return await m(e,a);case"ratings_measures":return await u(e,a);default:return}})),a("items.update",d("items.update",async(e,a)=>{switch(e.collection){case"measures":return await m(e,a);case"ratings_measures":return await u(e,a);default:return}}))};
