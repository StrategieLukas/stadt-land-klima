import e from"path";import{execFile as t}from"child_process";import{writeFileSync as i,unlinkSync as r}from"fs";var s={id:"pdf-service",handler:async(s,{services:n,getSchema:a})=>{const{ItemsService:o}=n;s.get("/",(e,t)=>t.send("Hello, World!")),s.post("/municipality/:slug/:version",async(s,n)=>{const c=s.accountability,u=await a(),l=s.params.slug,p=s.params.version;if(!l)return n.status(400).send("Missing municipality slug in path");try{const s=new o("municipality_scores",{schema:u,accountability:c}),a=await s.readByQuery({fields:["date_updated","score_total","score_buildings","score_energy","score_transport","score_industry","score_management","score_agriculture","percentage_rated","rank","municipality.id","municipality.name","municipality.slug","municipality.localteam_id","municipality.municipality_type","municipality.state","municipality.overall_status_comment"],filter:{catalog_version:{name:{_eq:p}},municipality:{slug:{_eq:l}}},limit:1});if(!a||!a[0])return n.status(404).send(`No scores found for municipality "${l}" or access denied`);const m=a[0],d=new o("measures",{schema:u,accountability:c}),y=await d.readByQuery({});if(!y)return n.status(404).send("Measures not found or access denied");const f=new o("ratings_measures",{schema:u,accountability:c}),g=await f.readByQuery({filter:{localteam_id:{_eq:m.municipality.localteam_id}}});if(!g)return n.status(404).send("Rating measures not found or access denied");const _=function(e,t){if(!Array.isArray(e)||!Array.isArray(t))return{};const i=new Map(t.map(e=>[e.id,e])),r={};for(const t of e){const e=i.get(t.measure_id);if(e){const{sector:i}=e;t.measure=e,r[i]=r[i]||[],r[i].push(t)}}return r}(g,y),h=e.join(process.cwd(),"/extensions/directus-extension-endpoint-pdf-service/typst"),w=e.join(h,"municipality_summary.typ"),v=Date.now(),S=`municipalityScore_${v}.json`,b=`measures_${v}.json`,j=e.join(h,S),$=e.join(h,b);i(j,JSON.stringify(m)),i($,JSON.stringify(_));t("typst",["compile","--input",`municipalityScore=${S}`,"--input",`measures=${b}`,"--font-path",`${h}/fonts`,w,"-"],{maxBuffer:52428800,encoding:"buffer"},(e,t,i)=>{try{r(j),r($)}catch(e){console.error("Error cleaning up temporary files:",e)}if(e)return console.error("Typst error:",e),n.status(500).send("PDF generation failed");i&&i.length&&console.warn("Typst warnings:",i.toString()),n.setHeader("Content-Type","application/pdf"),n.setHeader("Content-Disposition",'inline; filename="output.pdf"'),n.status(200).send(t)})}catch(e){return console.error("Error fetching municipality:",e),n.status(500).send("Server error")}})}};export{s as default};
