import e from"path";import{execFile as t}from"child_process";import{writeFileSync as s,unlinkSync as n}from"fs";var i={id:"pdf-service",handler:async(i,{services:r,getSchema:a})=>{const{ItemsService:o}=r;i.get("/",(e,t)=>t.send("Hello, World!")),i.post("/municipality/:slug/:version",async(i,r)=>{const c=i.accountability,u=await a(),p=i.params.slug;if(i.params.version,!p)return r.status(400).send("Missing municipality slug in path");try{const i=new o("municipalities",{schema:u,accountability:c}),a=await i.readByQuery({filter:{slug:{_eq:p}},limit:1});if(!a||!a[0])return r.status(404).send(`Municipality "${p}" not found or access denied`);const l=a[0],d=new o("measures",{schema:u,accountability:c}),m=await d.readByQuery({});if(!m)return r.status(404).send("Measures not found or access denied");const f=new o("ratings_measures",{schema:u,accountability:c}),y=await f.readByQuery({filter:{localteam_id:{_eq:l.localteam_id}}});if(!y)return r.status(404).send("Rating measures not found or access denied");const g=function(e,t){if(!Array.isArray(e)||!Array.isArray(t))return{};const s=new Map(t.map(e=>[e.id,e])),n={};for(const t of e){const e=s.get(t.measure_id);if(e){const{sector:s}=e;t.measure=e,n[s]=n[s]||[],n[s].push(t)}}return n}(y,m),h=e.join(process.cwd(),"/extensions/directus-extension-endpoint-pdf-service/typst"),w=e.join(h,"municipality_summary.typ"),_=Date.now(),v=`municipality_${_}.json`,j=`measures_${_}.json`,S=e.join(h,v),$=e.join(h,j);s(S,JSON.stringify(l)),s($,JSON.stringify(g));t("typst",["compile","--input",`municipality=${v}`,"--input",`measures=${j}`,"--font-path",`${h}/fonts`,w,"-"],{maxBuffer:52428800,encoding:"buffer"},(e,t,s)=>{try{n(S),n($)}catch(e){console.error("Error cleaning up temporary files:",e)}if(e)return console.error("Typst error:",e),r.status(500).send("PDF generation failed");s&&s.length&&console.warn("Typst warnings:",s.toString()),r.setHeader("Content-Type","application/pdf"),r.setHeader("Content-Disposition",'inline; filename="output.pdf"'),r.status(200).send(t)})}catch(e){return console.error("Error fetching municipality:",e),r.status(500).send("Server error")}})}};export{i as default};
